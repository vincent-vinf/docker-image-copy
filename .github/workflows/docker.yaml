name: Docker

on:
  workflow_dispatch:
  push:
    branches: [ main ]


env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:

  build:
    name: Copy
    runs-on: ubuntu-latest
    container:
      image: quay.io/containers/skopeo:latest
      options: --entrypoint /bin/bash
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Copy image to Aliyun
      run: |
        set -e
        echo "Current working directory: $(pwd)"
        echo "Listing files in current directory:"
        ls -al
        cat images.txt
        new_repo="$ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE"

        # Read image names from images.txt
        while IFS= read -r image || [ -n "$image" ]; do
            # Remove leading and trailing whitespace from the image name
            # Skip if the image is blank
            image="${image#"${image%%[![:space:]]*}"}"  # 去前空格
            image="${image%"${image##*[![:space:]]}"}"  # 去后空格
            if [[ -z "$image" || "$image" == \#* ]]; then
                continue
            fi
            
            image_name_tag=$(basename $image)
            # Replace / and : with _
            new_image="${new_repo}/${image_name_tag}"
            echo "cope $image"
            skopeo copy --multi-arch all --src-tls-verify=false --dest-creds="$ALIYUN_REGISTRY_USER:$ALIYUN_REGISTRY_PASSWORD" "docker://$image" "docker://$new_image"
        done < images.txt
        echo "copy images done."
        